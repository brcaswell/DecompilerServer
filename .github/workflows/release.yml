name: Release Build

on:
  push:
    tags: [ 'v*' ]
  release:
    types: [ published ]

jobs:
  build-release:
    name: Build Release Artifacts
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      run: dotnet restore DecompilerServer.sln
    
    - name: Build release
      run: dotnet build DecompilerServer.sln --configuration Release --no-restore
    
    - name: Run full test suite
      run: dotnet test Tests/Tests.csproj --configuration Release --no-build --verbosity normal
    
    - name: Publish Linux x64
      run: dotnet publish DecompilerServer.csproj -c Release -r linux-x64 --self-contained false -o publish/linux-x64
    
    - name: Publish Windows x64
      run: dotnet publish DecompilerServer.csproj -c Release -r win-x64 --self-contained false -o publish/win-x64
    
    - name: Create release archives
      run: |
        cd publish
        tar -czf decompilerserver-linux-x64.tar.gz linux-x64/
        zip -r decompilerserver-win-x64.zip win-x64/
    
    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: decompilerserver-linux-x64
        path: publish/decompilerserver-linux-x64.tar.gz
    
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: decompilerserver-win-x64
        path: publish/decompilerserver-win-x64.zip

  build-container:
    name: Build Release Container
    runs-on: ubuntu-latest
    needs: build-release
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Extract tag name
      id: extract_tag
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Build container image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        tags: |
          decompilerserver:latest
          decompilerserver:${{ steps.extract_tag.outputs.tag }}
        outputs: type=docker,dest=/tmp/decompilerserver.tar
    
    - name: Upload container artifact
      uses: actions/upload-artifact@v4
      with:
        name: decompilerserver-container
        path: /tmp/decompilerserver.tar

  attach-to-release:
    name: Attach Artifacts to Release
    runs-on: ubuntu-latest
    needs: [build-release, build-container]
    if: github.event_name == 'release'
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Attach artifacts to release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          decompilerserver-linux-x64/decompilerserver-linux-x64.tar.gz
          decompilerserver-win-x64/decompilerserver-win-x64.zip
          decompilerserver-container/decompilerserver.tar