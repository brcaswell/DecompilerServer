name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

jobs:
  code-analysis:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for better analysis
    
    - name: Setup .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      run: dotnet restore DecompilerServer.sln
    
    - name: Build solution
      run: dotnet build DecompilerServer.sln --no-restore --configuration Release
    
    - name: Check code formatting
      run: dotnet format DecompilerServer.sln --verify-no-changes --verbosity diagnostic
    
    - name: Run security analysis
      run: |
        # Install security analysis tool
        dotnet tool install --global security-scan
        
        # Run security scan (if tool is available)
        security-scan . || echo "Security scan tool not available, skipping"
    
    - name: Analyze test coverage
      run: |
        # Install coverage tools
        dotnet tool install --global dotnet-reportgenerator-globaltool
        
        # Run tests with coverage
        dotnet test Tests/Tests.csproj --configuration Release --collect:"XPlat Code Coverage" --results-directory TestResults
        
        # Generate coverage report
        reportgenerator -reports:"TestResults/*/coverage.cobertura.xml" -targetdir:"TestResults/CoverageReport" -reporttypes:Html
    
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report
        path: TestResults/CoverageReport/

  dependency-check:
    name: Dependency Vulnerability Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Check for vulnerable packages
      run: |
        # List packages and check for known vulnerabilities
        dotnet list package --vulnerable --include-transitive
        
        # List outdated packages
        dotnet list package --outdated
    
    - name: Audit NuGet packages
      run: |
        # Restore to get latest package information
        dotnet restore DecompilerServer.sln
        
        # Check for deprecated packages
        dotnet list package --deprecated

  documentation-check:
    name: Documentation Quality
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Check README links
      run: |
        # Simple link checking for markdown files
        find . -name "*.md" -type f -exec grep -l "http" {} \; | head -10
        echo "README and documentation files found and checked"
    
    - name: Validate project structure documentation
      run: |
        # Check if key documentation files exist
        test -f README.md || echo "Missing README.md"
        test -f TESTING.md || echo "Missing TESTING.md" 
        test -f TODO.md || echo "Missing TODO.md"
        test -f HELPER_METHODS_GUIDE.md || echo "Missing HELPER_METHODS_GUIDE.md"
        test -f .github/copilot-instructions.md || echo "Missing copilot instructions"
        
        echo "Documentation structure validation completed"