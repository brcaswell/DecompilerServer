name: Build and Test

on:
  push:
    branches: [ main, develop, 'feature/*' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    name: Build and Test (.NET 8)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      run: dotnet restore DecompilerServer.sln
    
    - name: Build solution (Release)
      run: dotnet build DecompilerServer.sln --no-restore --configuration Release
    
    - name: Build solution (Debug for tests)
      run: dotnet build DecompilerServer.sln --no-restore --configuration Debug
    
    - name: Run unit tests
      run: dotnet test Tests/Tests.csproj --no-build --verbosity normal --configuration Debug --logger trx --results-directory TestResults
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: TestResults/*.trx
    
    - name: Check formatting
      run: dotnet format DecompilerServer.sln --verify-no-changes --verbosity diagnostic

  container-build:
    name: Container Build Test
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: docker build -t decompiler-server:test .
    
    - name: Test container startup
      run: |
        # Start container in background
        docker run -d --name test-container decompiler-server:test
        
        # Wait a moment for startup
        sleep 5
        
        # Check if container is running
        docker ps | grep test-container
        
        # Clean up
        docker stop test-container
        docker rm test-container

  cross-platform-build:
    name: Cross-Platform Build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Build solution (Release)
      run: dotnet build DecompilerServer.sln --configuration Release
    
    - name: Build solution (Debug for tests) 
      run: dotnet build DecompilerServer.sln --configuration Debug
    
    - name: Run quick tests
      run: dotnet test Tests/Tests.csproj --configuration Debug --filter "TestCategory!=Integration" --verbosity minimal